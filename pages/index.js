// 引入React hook及next.js router, useForm用于快速提取form中的信息
import { useEffect, useState } from 'react'
import Head from 'next/head'
import { useRouter } from 'next/router'
import { useForm } from 'react-hook-form'
//axios库用于get post请求
import axios from 'axios'
//从Ant Design引入弹窗以及相应的按钮
import { Button, Modal } from 'antd';
import 'antd/dist/antd.css'

export default function Home () {
  const [msg, setMsg] = useState('') //msg state用于存储/hello API返回的消息
  const router = useRouter() //实例化next.js的路由
	const { 
			register, // register用于注册input,以便验证是否填了
			handleSubmit, 
			formState:{errors}
	} = useForm() 
  
  //获取hello API中的msg
  const getMsg = async () => { 
    try {
      const res = await axios.get(`http://localhost:9999/hello`)
      setMsg(res.data.msg)
    } catch {
      err => console.log(err)
    }
  }
  //初次渲染时调用API
  useEffect(() => {
    getMsg()
  },[])

  //点击欢迎之后弹出msg中的消息
  const welcome = () => {
    Modal.success({
      content: msg,
    });
  };  

  //点击提交登录
  const login = async (data) => {
    // 1. 获取form中填写的内容，并将id转换为数字
    let formedData = {
      ...data,
      id: Number(data.id)
    } 
    // 2.使用post方法提交处理过的form数据，如果后端验证格式正确（接受到msg==='ok'）,则跳转到/lesson页面
    try {
      const res = await axios.post('http://localhost:9999/login', formedData)
      if(res.data.msg === 'ok') {
        router.push('/lesson')
      }
    } catch {
      err => console.log(err)
    }
  }

  return (
    //纵列满屏，使用grid居中form
    <div className="h-screen grid place-content-center
      bg-[url('../static/BG.jpeg')] bg-cover">
      <Head>
        <title>HYZ Credit</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {/* form毛玻璃效果, hover时更加模糊，纵列flex布局 */}
      <form className='w-[26rem] flex flex-col shadow border-none px-9 py-14 
        rounded-2xl backdrop-blur-md bg-gray-300/20 hover:bg-white/20 backdrop-opacity-95 hover:backdrop-opacity-100 transition ease-in-out delay-300'
        onSubmit={handleSubmit(login)}  
      >      
        <h1 className='text-2xl font-medium text-gray-700'>输入姓名和学号就能查绩点了哟</h1>   
        <hr className='py-3 mt-2'/>
        <label className='block mb-5'>
          <span className='text-gray-700'>姓名</span>
          {/* hover时input框背景渐变 focus时出现ring */}
          <input
            {...register('name', { required: true})}
            className='border shadow rounded py-2 px-3 block w-full mt-1 
              ring-blue-400 outline-none focus:ring transition ease-in-out delay-150
              backdrop-opacity-80 bg-gray-200/70 hover:bg-white/100 backdrop-blur-xl'
            placeholder='例：黄志远'
            type='text'
          />
        </label>
        <label className='block mb-10'>
          <span className='text-gray-700'>学号</span>
          <input
            {...register('id', { required: true})}
            className='border shadow rounded py-2 px-3 block w-full mt-1
              ring-blue-400 outline-none focus:ring transition ease-in-out delay-150
              backdrop-opacity-80 bg-white/70 hover:bg-white/100 backdrop-blur-xl'
            placeholder='例：12345'
            type='text'
          />
        </label>
        <div className='flex justify-center space-x-5'>
          <input 
            type="submit" 
            value='登录'
            className='shadow bg-blue-500 hover:bg-blue-700 transition ease-in-out delay-200
            focus:outline-none text-white font-bold py-2 px-4 rounded cursor-pointer w-1/2 h-10'		
          />
          <Button
            type="primary"
            onClick={welcome}
            className='shadow border py-2 px-4 rounded text-blue-600 font-bold w-1/2
              focus:outline-none hover:bg-gray-100 transition ease-in-out delay-200
              h-10 border-blue-500 backdrop-opacity-80 bg-white/70 hover:bg-white/100 backdrop-blur-xl' 
            >
            欢迎
           </Button>
           
        </div>
        {/* 对于提交的form数据进行验证，name和id必须要填 */}
        {errors.name && (
          <span className='text-red-500 block mt-4 text-lg font-bold'> 
              - 啊 名字要写的唉
          </span>
        )}
        {errors.id && (
          <span className='text-red-500 block text-lg font-bold mt-4'> 
              - 啊 学号也要写的唉
          </span>
        )}
      </form>
     
    </div>
  )
}


